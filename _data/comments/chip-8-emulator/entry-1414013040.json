{
  "_id": "lyndon",
  "date": 1414013040,
  "name": "Lyndon",
  "email": "4d3efb98c1d9c26b1c98402dcf78499a",
  "message":"If you’re referring to the problem piece of code I had; it’s because of how the instruction is set out and bitwise operators:\n\n`opcode & 0x0F00` refers to the second nibble of the instruction which is the register we want to place the value of the register referred to by `opcode & 0x00F0` in.\n\nAn example using the opcode in question (8xy0):\n\nSay we have the instruction `0x8210`, that’s `1000 0010 0001 0000` in binary, and simply means store the value of register 1 in register 2. To get from the instruction the register we want to put the data into we need to isolate the second nibble and shift it so it doesn’t have any of the other bits from the other nibbles.  \n\nTo do that we first bitwise AND it with `0x0F00` which results in `0x0200` (with the 2 being the only nibble that isn’t changed by this operation) which is `0000 0010 0000 0000` in binary and then shift it by 8 bits to theright so it removes the other bits and becomes `0000 0000 0000 0010`, 2.\n\nYou do the same for the next part of the instruction except that it is one place to the right in hexadecimal already which means you shift it by 4 less.\n\nHopefully that’s explained it well enough for you."
}
